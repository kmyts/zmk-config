/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/keys.h>

&mt { tapping-term-ms = <400>; };

/ {
    macros {
        win_switch: win_switch {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LG(GRAVE)>;
            label = "WIN_SWITCH";
        };

        terminal: terminal {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LC(ESC)>;
            label = "TERMINAL";
        };

        next_page: next_page {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LG(LS(RIGHT_BRACKET))>;
            label = "NEXT_PAGE";
        };

        prev_page: prev_page {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LG(LS(LEFT_BRACKET))>;
            label = "PREV_PAGE";
        };
    };

    combos {
        compatible = "zmk,combos";

        IO {
            bindings = <&kp LEFT_PARENTHESIS>;
            key-positions = <6 7>;
        };

        OP {
            bindings = <&kp RIGHT_PARENTHESIS>;
            key-positions = <7 8>;
        };

        KL {
            bindings = <&kp LEFT_BRACKET>;
            key-positions = <18 19>;
        };

        lsemocolon {
            bindings = <&kp RIGHT_BRACKET>;
            key-positions = <19 20>;
        };

        left_brace {
            bindings = <&kp LEFT_BRACE>;
            key-positions = <30 31>;
        };

        right_brace {
            bindings = <&kp RIGHT_BRACE>;
            key-positions = <31 32>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&kp TAB    &kp Q  &kp W  &kp E         &kp R  &kp T        &kp Y    &kp U  &kp I      &kp O    &kp P     &kp BSPC
&kp LCTRL  &kp A  &kp S  &kp D         &kp F  &kp G        &kp H    &kp J  &kp K      &kp L    &kp SEMI  &kp SQT
&kp LSHFT  &kp Z  &kp X  &kp C         &kp V  &kp B        &kp N    &kp M  &kp COMMA  &kp DOT  &kp FSLH  &kp ESC
                         &kp LEFT_GUI  &mo 1  &kp SPACE    &kp RET  &mo 2  &kp RALT
            >;

            label = "Base";
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&win_switch  &mt F1 N1  &mt F2 N2  &mt F3 N3  &trans  &kp PAGE_UP      &kp HOME  &trans    &trans    &kp RIGHT_BRACKET  &kp LEFT_BRACKET  &kp BSPC
&terminal    &mt F4 N4  &mt F5 N5  &mt F6 N6  &trans  &kp PAGE_DOWN    &kp END   &kp LEFT  &kp DOWN  &kp UP_ARROW       &kp RIGHT         &trans
&kp LSHFT    &mt F7 N7  &mt F8 N8  &mt F9 N9  &kp N0  &trans           &trans    &trans    &trans    &trans             &trans            &trans
                                   &kp LGUI   &trans  &kp SPACE        &kp RET   &trans    &kp RALT
            >;

            label = "Lower";
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp TAB    &kp EXCL  &kp AT  &kp HASH  &kp DLLR  &kp PRCNT    &kp CARET  &kp AMPS   &kp ASTRK  &kp LPAR  &kp RPAR  &kp BSPC
&kp LCTRL  &trans    &trans  &trans    &trans    &trans       &kp MINUS  &kp EQUAL  &kp LBKT   &kp RBKT  &kp BSLH  &kp GRAVE
&kp LSHFT  &trans    &trans  &trans    &trans    &trans       &kp UNDER  &kp PLUS   &kp LBRC   &kp RBRC  &kp PIPE  &kp TILDE
                             &kp LGUI  &trans    &kp SPACE    &kp RET    &trans     &kp RALT
            >;

            label = "Raise";
        };

        adjust_layer {
            bindings = <
&trans  &bt BT_SEL 0  &bt BT_SEL 1  &trans  &trans  &trans    &kp K_VOLUME_DOWN  &kp K_VOLUME_UP  &kp K_PREVIOUS  &kp C_PLAY_PAUSE  &kt C_NEXT  &kt C_MUTE
&trans  &trans        &trans        &trans  &trans  &trans    &trans             &trans           &prev_page      &next_page        &trans      &trans
&trans  &bootloader   &trans        &trans  &trans  &trans    &trans             &trans           &trans          &trans            &trans      &trans
                                    &trans  &trans  &trans    &trans             &trans           &trans
            >;

            label = "Adjust";
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        ADJ_LAYER_CONDITION {
            if-layers = <1 2>;
            then-layer = <3>;
        };
    };
};
